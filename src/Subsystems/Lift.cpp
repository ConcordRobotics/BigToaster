// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Subsystems/Lift.h"
#include "../RobotMap.h"
#include "Robot.h"
#include "LiveWindow/LiveWindow.h"
#include "Commands/LinearSysRate.h"


Lift::Lift() : LinearSystem(), Subsystem("Lift") {
	sc = RobotMap::liftSC;
	encoder = RobotMap::liftEncoder;
	positionController = RobotMap::liftPositionController;
	rateController = RobotMap::liftRateController;
	name = new char[5];
	strcpy(name,"Lift");
}


void Lift::InitDefaultCommand() {
	// Set the default command for a subsystem here.

	SetDefaultCommand(new LinearSysRate(Robot::lift,Robot::lift,0.0));

}

void Lift::EnforceLimits() {
	// Add something for the limit switch
	// Don't reset distance to zero since the lift can unwind past zero

	if (mode == RATE) {
		if (encoder->GetDistance() < 0.0) rateController->SetSetpoint(0.0);
	}
	// Don't do anything for position - we shouldn't be commanding a negative position.
}
