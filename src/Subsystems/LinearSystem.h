// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef LINEAR_SYSTEM_H
#define LINEAR_SYSTEM_H

#include "Support/cPIDController.h"
#include "WPILib.h"

/**
 *
 *
 * @author ExampleAuthor
 */

class LinearSystem {
protected:
	int mode;
	enum modeType {OFF, POSITION, RATE};
	double limits[2] = {0,1};
	double range = 1.0;
	double setPoint = 0.0;
	double distanceOffset = 0.0;
	SpeedController* sc;
	Encoder* encoder;

 public:
	cPIDController* rateController;
	cPIDController* positionController;
	char* name = NULL;
	LinearSystem();
	LinearSystem(SpeedController* scIn, Encoder* encIn,
			cPIDController* pController, cPIDController* rController);
	void Stop();
	void SetSetpoint(double setSetpoint);
	void SetLimits(double min, double max);
	void InitDefaultCommand();
	void SetPositionMode();
	void SetRateMode();
	void UpdateController();
	virtual void EnforceLimits();
	double PositionError(double target);
};

#endif
