// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef ROBOTMAP_H
#define ROBOTMAP_H
#include "WPILib.h"
#include "Subsystems/Lift.h"
#include "Support/SingleMotor.h"
#include "Support/PIController.h"
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
class RobotMap {
public:

	// Data for Drive Motors
	static SpeedController* driveMotorsFrontLeftSC;
	static SpeedController* driveMotorsFrontRightSC;
	static SpeedController* driveMotorsBackLeftSC;
	static SpeedController* driveMotorsBackRightSC;
	static Encoder* driveMotorsFrontLeftEncoder;
	static Encoder* driveMotorsFrontRightEncoder;
	static Encoder* driveMotorsBackLeftEncoder;
	static Encoder* driveMotorsBackRightEncoder;
	static PIController* driveMotorsFrontLeftController;
	static PIController* driveMotorsFrontRightController;
	static PIController* driveMotorsBackLeftController;
	static PIController* driveMotorsBackRightController;
	static PIController* driveMotorsGyroController;
	static Gyro* driveMotorsGyro1;
	static SingleMotor* driveMotorsFrontLeftMotor;
	static SingleMotor* driveMotorsFrontRightMotor;
	static SingleMotor* driveMotorsBackLeftMotor;
	static SingleMotor* driveMotorsBackRightMotor;
	static BuiltInAccelerometer* driveMotorsAccelerometer;

	// Data for Lift system
	static SpeedController* liftSC;
	static Encoder* liftEncoder;
	static PIController* liftController;
    static SingleMotor* liftMotor;
	static void init();

};
#endif
